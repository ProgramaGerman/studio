name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'

jobs:
  # Job para verificar código y dependencias
  lint-and-audit:
    name: Lint and Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run security audit
        run: npm audit --audit-level=moderate

  # Job para type checking
  type-check:
    name: TypeScript Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run typecheck

  # Job principal de build y test
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    needs: [lint-and-audit, type-check]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: |
            .next/
            public/
            package.json
            next.config.ts
          retention-days: 30

  # Job para deployment (solo en rama main)
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [build-and-test]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.ORG_ID }}
          vercel-project-id: ${{ secrets.PROJECT_ID }}
          working-directory: ./
          vercel-args: '--prod'

  # Job para notificaciones de resultado
  notify:
    name: Notify Results
    runs-on: ubuntu-latest
    needs: [build-and-test, deploy]
    if: always()
    steps:
      - name: Notify Success
        if: needs.build-and-test.result == 'success' && (needs.deploy.result == 'success' || needs.deploy.result == 'skipped')
        run: |
          echo "✅ CI/CD Pipeline completed successfully!"
          echo "Build: ${{ needs.build-and-test.result }}"
          echo "Deploy: ${{ needs.deploy.result }}"

      - name: Notify Failure
        if: needs.build-and-test.result == 'failure' || needs.deploy.result == 'failure'
        run: |
          echo "❌ CI/CD Pipeline failed!"
          echo "Build: ${{ needs.build-and-test.result }}"
          echo "Deploy: ${{ needs.deploy.result }}"
          exit 1